import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
import { TimestreamWriteServiceException as __BaseException } from "./TimestreamWriteServiceException";
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  Message: string | undefined;
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  Message: string | undefined;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export interface Tag {
  Key: string | undefined;
  Value: string | undefined;
}
export interface CreateDatabaseRequest {
  DatabaseName: string | undefined;
  KmsKeyId?: string;
  Tags?: Tag[];
}
export interface Database {
  Arn?: string;
  DatabaseName?: string;
  TableCount?: number;
  KmsKeyId?: string;
  CreationTime?: Date;
  LastUpdatedTime?: Date;
}
export interface CreateDatabaseResponse {
  Database?: Database;
}
export declare class InternalServerException extends __BaseException {
  readonly name: "InternalServerException";
  readonly $fault: "server";
  Message: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InternalServerException, __BaseException>
  );
}
export declare class InvalidEndpointException extends __BaseException {
  readonly name: "InvalidEndpointException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<InvalidEndpointException, __BaseException>
  );
}
export declare class ServiceQuotaExceededException extends __BaseException {
  readonly name: "ServiceQuotaExceededException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  Message: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export declare class ValidationException extends __BaseException {
  readonly name: "ValidationException";
  readonly $fault: "client";
  Message: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ValidationException, __BaseException>
  );
}
export declare enum S3EncryptionOption {
  SSE_KMS = "SSE_KMS",
  SSE_S3 = "SSE_S3",
}
export interface S3Configuration {
  BucketName?: string;
  ObjectKeyPrefix?: string;
  EncryptionOption?: S3EncryptionOption | string;
  KmsKeyId?: string;
}
export interface MagneticStoreRejectedDataLocation {
  S3Configuration?: S3Configuration;
}
export interface MagneticStoreWriteProperties {
  EnableMagneticStoreWrites: boolean | undefined;
  MagneticStoreRejectedDataLocation?: MagneticStoreRejectedDataLocation;
}
export interface RetentionProperties {
  MemoryStoreRetentionPeriodInHours: number | undefined;
  MagneticStoreRetentionPeriodInDays: number | undefined;
}
export interface CreateTableRequest {
  DatabaseName: string | undefined;
  TableName: string | undefined;
  RetentionProperties?: RetentionProperties;
  Tags?: Tag[];
  MagneticStoreWriteProperties?: MagneticStoreWriteProperties;
}
export declare enum TableStatus {
  ACTIVE = "ACTIVE",
  DELETING = "DELETING",
}
export interface Table {
  Arn?: string;
  TableName?: string;
  DatabaseName?: string;
  TableStatus?: TableStatus | string;
  RetentionProperties?: RetentionProperties;
  CreationTime?: Date;
  LastUpdatedTime?: Date;
  MagneticStoreWriteProperties?: MagneticStoreWriteProperties;
}
export interface CreateTableResponse {
  Table?: Table;
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Message?: string;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export interface DeleteDatabaseRequest {
  DatabaseName: string | undefined;
}
export interface DeleteTableRequest {
  DatabaseName: string | undefined;
  TableName: string | undefined;
}
export interface DescribeDatabaseRequest {
  DatabaseName: string | undefined;
}
export interface DescribeDatabaseResponse {
  Database?: Database;
}
export interface DescribeEndpointsRequest {}
export interface Endpoint {
  Address: string | undefined;
  CachePeriodInMinutes: number | undefined;
}
export interface DescribeEndpointsResponse {
  Endpoints: Endpoint[] | undefined;
}
export interface DescribeTableRequest {
  DatabaseName: string | undefined;
  TableName: string | undefined;
}
export interface DescribeTableResponse {
  Table?: Table;
}
export declare enum DimensionValueType {
  VARCHAR = "VARCHAR",
}
export interface Dimension {
  Name: string | undefined;
  Value: string | undefined;
  DimensionValueType?: DimensionValueType | string;
}
export interface ListDatabasesRequest {
  NextToken?: string;
  MaxResults?: number;
}
export interface ListDatabasesResponse {
  Databases?: Database[];
  NextToken?: string;
}
export interface ListTablesRequest {
  DatabaseName?: string;
  NextToken?: string;
  MaxResults?: number;
}
export interface ListTablesResponse {
  Tables?: Table[];
  NextToken?: string;
}
export interface ListTagsForResourceRequest {
  ResourceARN: string | undefined;
}
export interface ListTagsForResourceResponse {
  Tags?: Tag[];
}
export declare enum MeasureValueType {
  BIGINT = "BIGINT",
  BOOLEAN = "BOOLEAN",
  DOUBLE = "DOUBLE",
  MULTI = "MULTI",
  TIMESTAMP = "TIMESTAMP",
  VARCHAR = "VARCHAR",
}
export interface MeasureValue {
  Name: string | undefined;
  Value: string | undefined;
  Type: MeasureValueType | string | undefined;
}
export declare enum TimeUnit {
  MICROSECONDS = "MICROSECONDS",
  MILLISECONDS = "MILLISECONDS",
  NANOSECONDS = "NANOSECONDS",
  SECONDS = "SECONDS",
}
export interface _Record {
  Dimensions?: Dimension[];
  MeasureName?: string;
  MeasureValue?: string;
  MeasureValueType?: MeasureValueType | string;
  Time?: string;
  TimeUnit?: TimeUnit | string;
  Version?: number;
  MeasureValues?: MeasureValue[];
}
export interface RecordsIngested {
  Total?: number;
  MemoryStore?: number;
  MagneticStore?: number;
}
export interface RejectedRecord {
  RecordIndex?: number;
  Reason?: string;
  ExistingVersion?: number;
}
export declare class RejectedRecordsException extends __BaseException {
  readonly name: "RejectedRecordsException";
  readonly $fault: "client";
  Message?: string;
  RejectedRecords?: RejectedRecord[];
  constructor(
    opts: __ExceptionOptionType<RejectedRecordsException, __BaseException>
  );
}
export interface TagResourceRequest {
  ResourceARN: string | undefined;
  Tags: Tag[] | undefined;
}
export interface TagResourceResponse {}
export interface UntagResourceRequest {
  ResourceARN: string | undefined;
  TagKeys: string[] | undefined;
}
export interface UntagResourceResponse {}
export interface UpdateDatabaseRequest {
  DatabaseName: string | undefined;
  KmsKeyId: string | undefined;
}
export interface UpdateDatabaseResponse {
  Database?: Database;
}
export interface UpdateTableRequest {
  DatabaseName: string | undefined;
  TableName: string | undefined;
  RetentionProperties?: RetentionProperties;
  MagneticStoreWriteProperties?: MagneticStoreWriteProperties;
}
export interface UpdateTableResponse {
  Table?: Table;
}
export interface WriteRecordsRequest {
  DatabaseName: string | undefined;
  TableName: string | undefined;
  CommonAttributes?: _Record;
  Records: _Record[] | undefined;
}
export interface WriteRecordsResponse {
  RecordsIngested?: RecordsIngested;
}
export declare const TagFilterSensitiveLog: (obj: Tag) => any;
export declare const CreateDatabaseRequestFilterSensitiveLog: (
  obj: CreateDatabaseRequest
) => any;
export declare const DatabaseFilterSensitiveLog: (obj: Database) => any;
export declare const CreateDatabaseResponseFilterSensitiveLog: (
  obj: CreateDatabaseResponse
) => any;
export declare const S3ConfigurationFilterSensitiveLog: (
  obj: S3Configuration
) => any;
export declare const MagneticStoreRejectedDataLocationFilterSensitiveLog: (
  obj: MagneticStoreRejectedDataLocation
) => any;
export declare const MagneticStoreWritePropertiesFilterSensitiveLog: (
  obj: MagneticStoreWriteProperties
) => any;
export declare const RetentionPropertiesFilterSensitiveLog: (
  obj: RetentionProperties
) => any;
export declare const CreateTableRequestFilterSensitiveLog: (
  obj: CreateTableRequest
) => any;
export declare const TableFilterSensitiveLog: (obj: Table) => any;
export declare const CreateTableResponseFilterSensitiveLog: (
  obj: CreateTableResponse
) => any;
export declare const DeleteDatabaseRequestFilterSensitiveLog: (
  obj: DeleteDatabaseRequest
) => any;
export declare const DeleteTableRequestFilterSensitiveLog: (
  obj: DeleteTableRequest
) => any;
export declare const DescribeDatabaseRequestFilterSensitiveLog: (
  obj: DescribeDatabaseRequest
) => any;
export declare const DescribeDatabaseResponseFilterSensitiveLog: (
  obj: DescribeDatabaseResponse
) => any;
export declare const DescribeEndpointsRequestFilterSensitiveLog: (
  obj: DescribeEndpointsRequest
) => any;
export declare const EndpointFilterSensitiveLog: (obj: Endpoint) => any;
export declare const DescribeEndpointsResponseFilterSensitiveLog: (
  obj: DescribeEndpointsResponse
) => any;
export declare const DescribeTableRequestFilterSensitiveLog: (
  obj: DescribeTableRequest
) => any;
export declare const DescribeTableResponseFilterSensitiveLog: (
  obj: DescribeTableResponse
) => any;
export declare const DimensionFilterSensitiveLog: (obj: Dimension) => any;
export declare const ListDatabasesRequestFilterSensitiveLog: (
  obj: ListDatabasesRequest
) => any;
export declare const ListDatabasesResponseFilterSensitiveLog: (
  obj: ListDatabasesResponse
) => any;
export declare const ListTablesRequestFilterSensitiveLog: (
  obj: ListTablesRequest
) => any;
export declare const ListTablesResponseFilterSensitiveLog: (
  obj: ListTablesResponse
) => any;
export declare const ListTagsForResourceRequestFilterSensitiveLog: (
  obj: ListTagsForResourceRequest
) => any;
export declare const ListTagsForResourceResponseFilterSensitiveLog: (
  obj: ListTagsForResourceResponse
) => any;
export declare const MeasureValueFilterSensitiveLog: (obj: MeasureValue) => any;
export declare const _RecordFilterSensitiveLog: (obj: _Record) => any;
export declare const RecordsIngestedFilterSensitiveLog: (
  obj: RecordsIngested
) => any;
export declare const RejectedRecordFilterSensitiveLog: (
  obj: RejectedRecord
) => any;
export declare const TagResourceRequestFilterSensitiveLog: (
  obj: TagResourceRequest
) => any;
export declare const TagResourceResponseFilterSensitiveLog: (
  obj: TagResourceResponse
) => any;
export declare const UntagResourceRequestFilterSensitiveLog: (
  obj: UntagResourceRequest
) => any;
export declare const UntagResourceResponseFilterSensitiveLog: (
  obj: UntagResourceResponse
) => any;
export declare const UpdateDatabaseRequestFilterSensitiveLog: (
  obj: UpdateDatabaseRequest
) => any;
export declare const UpdateDatabaseResponseFilterSensitiveLog: (
  obj: UpdateDatabaseResponse
) => any;
export declare const UpdateTableRequestFilterSensitiveLog: (
  obj: UpdateTableRequest
) => any;
export declare const UpdateTableResponseFilterSensitiveLog: (
  obj: UpdateTableResponse
) => any;
export declare const WriteRecordsRequestFilterSensitiveLog: (
  obj: WriteRecordsRequest
) => any;
export declare const WriteRecordsResponseFilterSensitiveLog: (
  obj: WriteRecordsResponse
) => any;
