{"ast":null,"code":"var _jsxFileName = \"/home/jakedevar/help_constellation/constellation-local/constellation-visualizer/src/components/ToggleExclusion.js\";\nimport React, { useState } from 'react';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ToggleButtonExample(_ref) {\n  let {\n    toggleExclusion,\n    setToggleExclusion\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ToggleButton, {\n      className: \"mb-2\",\n      id: \"toggle-check\",\n      type: \"checkbox\",\n      variant: \"outline-primary\",\n      checked: checked,\n      value: \"1\",\n      onChange: e => setToggleExclusion(e.currentTarget.checked),\n      children: \"Exclude First 2%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = ToggleButtonExample;\nexport default ToggleButtonExample;\nvar _c;\n$RefreshReg$(_c, \"ToggleButtonExample\");","map":{"version":3,"names":["React","useState","ButtonGroup","ToggleButton","ToggleButtonExample","toggleExclusion","setToggleExclusion","checked","e","currentTarget"],"sources":["/home/jakedevar/help_constellation/constellation-local/constellation-visualizer/src/components/ToggleExclusion.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\n\nfunction ToggleButtonExample({ toggleExclusion, setToggleExclusion }) {\n  return (\n    <>\n      <ToggleButton\n        className=\"mb-2\"\n        id=\"toggle-check\"\n        type=\"checkbox\"\n        variant=\"outline-primary\"\n        checked={checked}\n        value=\"1\"\n        onChange={(e) => setToggleExclusion(e.currentTarget.checked)}\n      >\n        Exclude First 2%\n      </ToggleButton>\n    </>\n  );\n}\n\nexport default ToggleButtonExample;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,6BAA6B;AACrD,OAAOC,YAAY,MAAM,8BAA8B;AAAC;AAAA;AAExD,SAASC,mBAAmB,OAA0C;EAAA,IAAzC;IAAEC,eAAe;IAAEC;EAAmB,CAAC;EAClE,oBACE;IAAA,uBACE,QAAC,YAAY;MACX,SAAS,EAAC,MAAM;MAChB,EAAE,EAAC,cAAc;MACjB,IAAI,EAAC,UAAU;MACf,OAAO,EAAC,iBAAiB;MACzB,OAAO,EAAEC,OAAQ;MACjB,KAAK,EAAC,GAAG;MACT,QAAQ,EAAGC,CAAC,IAAKF,kBAAkB,CAACE,CAAC,CAACC,aAAa,CAACF,OAAO,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAGhD,iBACd;AAEP;AAAC,KAhBQH,mBAAmB;AAkB5B,eAAeA,mBAAmB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}